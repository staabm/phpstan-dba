<?php return array (
  'schemaVersion' => 'v12-new-cache5',
  'schemaHash' => NULL,
  'records' => 
  array (
    'EXPLAIN DELETE from adasfd' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Table \'phpstan_dba.adasfd\' doesn\'t exist',
         'code' => 1146,
      )),
    ),
    'EXPLAIN INSERT INTO `ada` SET email="test" WHERE adaid = 1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'WHERE adaid = 1\' at line 1

Simulated query: EXPLAIN INSERT INTO `ada` SET email="test" WHERE adaid = 1',
         'code' => 1064,
      )),
    ),
    'EXPLAIN INSERT into adasfd SET email="sdf"' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Table \'phpstan_dba.adasfd\' doesn\'t exist',
         'code' => 1146,
      )),
    ),
    'EXPLAIN REPLACE INTO `ada` SET email="test" WHERE adaid = 1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'WHERE adaid = 1\' at line 1

Simulated query: EXPLAIN REPLACE INTO `ada` SET email="test" WHERE adaid = 1',
         'code' => 1064,
      )),
    ),
    'EXPLAIN REPLACE into adasfd SET email="sdf"' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Table \'phpstan_dba.adasfd\' doesn\'t exist',
         'code' => 1146,
      )),
    ),
    'EXPLAIN UPDATE adasfd SET email = ""' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Table \'phpstan_dba.adasfd\' doesn\'t exist',
         'code' => 1146,
      )),
    ),
    'EXPLAIN UPDATE package SET indexedAt=\'1970-01-01\' WHERE id IN (NULL) AND (indexedAt IS NULL OR indexedAt <= crawledAt)' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Table \'phpstan_dba.package\' doesn\'t exist',
         'code' => 1146,
      )),
    ),
    'SELECT * FROM  LIMIT 1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT * FROM 1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'1 LIMIT 0\' at line 1

Simulated query: SELECT * FROM 1 LIMIT 0',
         'code' => 1064,
      )),
    ),
    'SELECT * FROM 1 LIMIT 1,1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'1 LIMIT 0\' at line 1

Simulated query: SELECT * FROM 1 LIMIT 0',
         'code' => 1064,
      )),
    ),
    'SELECT * FROM `ada` WHERE adaid = 1' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>, gesperrt: int<-128, 127>, 1: int<-128, 127>, email: string, 2: string, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT * FROM `ada` WHERE email = \'test@example.com\';' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>, gesperrt: int<-128, 127>, 1: int<-128, 127>, email: string, 2: string, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT * FROM ada' => 
    array (
      'result' => 
      array (
        3 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, gesperrt: int<-128, 127>, email: string, freigabe1u1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT * FROM ada GROUP BY doesNotExist' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'doesNotExist\' in \'group statement\'',
         'code' => 1054,
      )),
    ),
    'SELECT * FROM ada ORDER BY doesNotExist' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'doesNotExist\' in \'order clause\'',
         'code' => 1054,
      )),
    ),
    'SELECT * FROM ada WHERE adaid = \'1\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>, gesperrt: int<-128, 127>, 1: int<-128, 127>, email: string, 2: string, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT * FROM ada WHERE doesNotExist=1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'doesNotExist\' in \'where clause\'',
         'code' => 1054,
      )),
    ),
    'SELECT * FROM ada WHERE email = \'1970-01-01\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>, gesperrt: int<-128, 127>, 1: int<-128, 127>, email: string, 2: string, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT * FROM ada WHERE email = \'1970-01-01\'  LIMIT \'27\' OFFSET \'15\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>, gesperrt: int<-128, 127>, 1: int<-128, 127>, email: string, 2: string, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT * FROM ada WHERE email = \'1970-01-01\'  LIMIT 5 OFFSET 2' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>, gesperrt: int<-128, 127>, 1: int<-128, 127>, email: string, 2: string, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT * FROM ak' => 
    array (
      'result' => 
      array (
        3 => 
        array (
          'type-description' => 'array{akid: int<-2147483648, 2147483647>, eladaid: int<-2147483648, 2147483647>|null, eadavk: numeric-string}',
        ),
      ),
    ),
    'SELECT * FROM typemix' => 
    array (
      'result' => 
      array (
        3 => 
        array (
          'type-description' => 'array{pid: int<0, 4294967295>, c_char5: string, c_varchar255: string, c_varchar25: string|null, c_varbinary255: string, c_varbinary25: string|null, c_date: string|null, c_time: string|null, c_datetime: string|null, c_timestamp: string|null, c_year: int<0, 2155>|null, c_tiny_text: string|null, c_medium_text: string|null, c_text: string|null, c_long_text: string|null, c_enum: string, c_set: string, c_bit: int|null, c_int: int<-2147483648, 2147483647>, c_tinyint: int<-128, 127>, c_nullable_tinyint: int<-128, 127>|null, c_smallint: int<-32768, 32767>, c_mediumint: int<-8388608, 8388607>, c_bigint: int, c_double: float, c_real: float, c_float: float, c_boolean: int<-128, 127>, c_blob: string, c_tinyblob: string, c_mediumblog: string, c_longblob: string, c_unsigned_tinyint: int<0, 255>, c_unsigned_int: int<0, 4294967295>, c_unsigned_smallint: int<0, 65535>, c_unsigned_mediumint: int<0, 16777215>, c_unsigned_bigint: int<0, max>, c_json: string|null, c_json_not_null: string, c_decimal: numeric-string|null, c_decimal_not_null: numeric-string}',
        ),
      ),
    ),
    'SELECT * FROM unknown_table' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Table \'phpstan_dba.unknown_table\' doesn\'t exist',
         'code' => 1146,
      )),
    ),
    'SELECT *,adaid FROM `ada` WHERE email = \'test@example.com\';' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>, gesperrt: int<-128, 127>, 1: int<-128, 127>, email: string, 2: string, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>, 4: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT FROM WHERE' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'FROM WHERE LIMIT 0\' at line 1

Simulated query: SELECT FROM WHERE LIMIT 0',
         'code' => 1064,
      )),
    ),
    'SELECT adaid FROM ada WHERE email=\'1970-01-01\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{adaid: int<-32768, 32767>, 0: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT akid FROM ak WHERE akid IN (\'1\')' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{akid: int<-2147483648, 2147483647>, 0: int<-2147483648, 2147483647>}',
        ),
      ),
    ),
    'SELECT doesNotExist, adaid, gesperrt, freigabe1u1 FROM ada' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'doesNotExist\' in \'field list\'',
         'code' => 1054,
      )),
    ),
    'SELECT email FROM ada' => 
    array (
      'result' => 
      array (
        3 => 
        array (
          'type-description' => 'array{email: string}',
        ),
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string}',
        ),
      ),
    ),
    'SELECT email FROM ada where email = ""' => 
    array (
      'result' => 
      array (
        3 => 
        array (
          'type-description' => 'array{email: string}',
        ),
      ),
    ),
    'SELECT email FROM ada where email = \'1\'' => 
    array (
      'result' => 
      array (
        3 => 
        array (
          'type-description' => 'array{email: string}',
        ),
      ),
    ),
    'SELECT email adaid
            WHERE gesperrt = \'1\' AND email LIKE \'%@example.com\'
            FROM ada
            LIMIT        1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'FROM ada LIMIT 0\' at line 3',
         'code' => 1064,
      )),
    ),
    'SELECT email adaid WHERE gesperrt FROM ada' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'FROM ada LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT email adaid WHERE gesperrt freigabe1u1 FROM ada' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'freigabe1u1 FROM ada LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT email adaid gesperrt freigabe1u1 FROM ada' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'gesperrt freigabe1u1 FROM ada LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT email, adaid  FROM ada  WHERE email = \'a\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid FROM ada' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid FROM ada GROUP BY xy LIMIT 1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'xy\' in \'group statement\'',
         'code' => 1054,
      )),
    ),
    'SELECT email, adaid FROM ada WHERE adaid = \'1\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid FROM ada WHERE adaid = \'1\' OR adaid = \'10\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid FROM ada WHERE adaid = \'1\' OR adaid = \'10\' and email = \'hello world\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid FROM ada WHERE adaid = \'1\' and email = \'hello world\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid FROM ada WHERE email=\'my_other_table\' LIMIT 1' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid GROUP BY xy FROM ada  LIMIT 1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'FROM ada LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT email, adaid, gesperrt, freigabe1u1 FROM ada' => 
    array (
      'result' => 
      array (
        3 => 
        array (
          'type-description' => 'array{email: string, adaid: int<-32768, 32767>, gesperrt: int<-128, 127>, freigabe1u1: int<-32768, 32767>}',
        ),
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>, gesperrt: int<-128, 127>, 2: int<-128, 127>, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid, gesperrt, freigabe1u1 FROM ada  LIMIT 1' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>, gesperrt: int<-128, 127>, 2: int<-128, 127>, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid, gesperrt, freigabe1u1 FROM ada  WHERE email=\'my_other_table\' LIMIT 1' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>, gesperrt: int<-128, 127>, 2: int<-128, 127>, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid, gesperrt, freigabe1u1 FROM ada WHERE adaid = \'1\'' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>, gesperrt: int<-128, 127>, 2: int<-128, 127>, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, adaid, gesperrt, freigabe1u1 FROM ada WHERE asdsa=\'1\'' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'asdsa\' in \'where clause\'',
         'code' => 1054,
      )),
    ),
    'SELECT email, adaid, gesperrt, freigabe1u1 FROM ada WHERE asdsa=1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'asdsa\' in \'where clause\'',
         'code' => 1054,
      )),
    ),
    'SELECT email, adaid, gesperrt, freigabe1u1 FROM ada WHERE gesperrt=1' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>, gesperrt: int<-128, 127>, 2: int<-128, 127>, freigabe1u1: int<-32768, 32767>, 3: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT email, does_not_exist FROM ada WHERE email = \'1970-01-01\' AND 1=1' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'does_not_exist\' in \'field list\'',
         'code' => 1054,
      )),
    ),
    'SELECT email, does_not_exist FROM ada WHERE email = \'1970-01-01\' AND email=\'test@example.com\'' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'Unknown column \'does_not_exist\' in \'field list\'',
         'code' => 1054,
      )),
    ),
    'SELECT email,adaid FROM ada' => 
    array (
      'result' => 
      array (
        5 => 
        array (
          'type-description' => 'array{email: string, 0: string, adaid: int<-32768, 32767>, 1: int<-32768, 32767>}',
        ),
        3 => 
        array (
          'type-description' => 'array{email: string, adaid: int<-32768, 32767>}',
        ),
      ),
    ),
    'SELECT id FROM table WHERE a=\'1970-01-01\' AND err-or id IN (\'1\')' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'table WHERE a=\'1970-01-01\' AND err-or id IN (\'1\') LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT id FROM table WHERE err-or id IN (\'1\')' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'table WHERE err-or id IN (\'1\') LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT id FROM table WHERE id IN (\'1\')' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'table WHERE id IN (\'1\') LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT with syntax error GROUPY by x' => 
    array (
      'error' => 
      \staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'with syntax error GROUPY by x LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
  ),
  'runtimeConfig' => 
  array (
    'errorMode' => 'exception',
    'debugMode' => false,
    'stringifyTypes' => false,
  ),
);