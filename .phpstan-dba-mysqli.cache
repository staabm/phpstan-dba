<?php return array (
  'schemaVersion' => 'v9-put-null-when-valid',
  'schemaHash' => '436d43fc96b9dd0cfad4bbc2837886e4',
  'records' => 
  array (
    'SELECT
                MD5(
                    GROUP_CONCAT(
                        CONCAT(
                            COALESCE(COLUMN_NAME, ""),
                            COALESCE(EXTRA, ""),
                            COLUMN_TYPE,
                            IS_NULLABLE
                        )
                    )
                ) AS dbsignature,
                1 AS grouper
            FROM
                information_schema.columns
            WHERE
                table_schema = DATABASE()
            GROUP BY
                grouper' => 
    array (
      'error' => NULL,
    ),
    'SELECT DISTINCT article_id, clang_id FROM article_slice WHERE' => 
    array (
      'error' => 
      staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT adaid FROM ada LIMIT 1 FOR SHARE' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada LIMIT 1 FOR SHARE NOWAIT' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada LIMIT 1 FOR SHARE SKIP LOCKED' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada LIMIT 1 FOR UPDATE NOWAIT' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada LIMIT 1 FOR UPDATE SKIP LOCKED' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada LIMIT 1 OFFSET 1' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada LIMIT 1 OFFSET 1 FOR UPDATE' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada WHERE email LIKE \'%questions ?%\'' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada WHERE email LIKE \':gesperrt%\'' => 
    array (
      'error' => NULL,
    ),
    'SELECT adaid FROM ada WHERE email LIKE \'hello?%\'' => 
    array (
      'error' => NULL,
    ),
    'SELECT akid FROM ak WHERE eadavk>1.0' => 
    array (
      'error' => NULL,
    ),
    'SELECT akid FROM ak WHERE eadavk>1.1' => 
    array (
      'error' => NULL,
    ),
    'SELECT eladaid FROM ak' => 
    array (
      'error' => NULL,
    ),
    'SELECT email adaid WHERE gesperrt freigabe1u1 FROM ada' => 
    array (
      'error' => 
      staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'freigabe1u1 FROM ada LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT email, adaid FROM ada' => 
    array (
      'result' => 
      array (
        5 => 
        PHPStan\Type\Constant\ConstantArrayType::__set_state(array(
           'keyType' => 
          PHPStan\Type\UnionType::__set_state(array(
             'sortedTypes' => true,
             'types' => 
            array (
              0 => 
              PHPStan\Type\Constant\ConstantIntegerType::__set_state(array(
                 'value' => 0,
              )),
              1 => 
              PHPStan\Type\Constant\ConstantIntegerType::__set_state(array(
                 'value' => 1,
              )),
              2 => 
              PHPStan\Type\Constant\ConstantStringType::__set_state(array(
                 'objectType' => NULL,
                 'value' => 'adaid',
                 'isClassString' => false,
              )),
              3 => 
              PHPStan\Type\Constant\ConstantStringType::__set_state(array(
                 'objectType' => NULL,
                 'value' => 'email',
                 'isClassString' => false,
              )),
            ),
          )),
           'itemType' => 
          PHPStan\Type\UnionType::__set_state(array(
             'sortedTypes' => false,
             'types' => 
            array (
              0 => 
              PHPStan\Type\StringType::__set_state(array(
              )),
              1 => 
              PHPStan\Type\IntegerRangeType::__set_state(array(
                 'min' => -32768,
                 'max' => 32767,
              )),
            ),
          )),
           'allArrays' => NULL,
           'nextAutoIndexes' => 
          array (
            0 => 2,
          ),
           'keyTypes' => 
          array (
            0 => 
            PHPStan\Type\Constant\ConstantStringType::__set_state(array(
               'objectType' => NULL,
               'value' => 'email',
               'isClassString' => false,
            )),
            1 => 
            PHPStan\Type\Constant\ConstantIntegerType::__set_state(array(
               'value' => 0,
            )),
            2 => 
            PHPStan\Type\Constant\ConstantStringType::__set_state(array(
               'objectType' => NULL,
               'value' => 'adaid',
               'isClassString' => false,
            )),
            3 => 
            PHPStan\Type\Constant\ConstantIntegerType::__set_state(array(
               'value' => 1,
            )),
          ),
           'valueTypes' => 
          array (
            0 => 
            PHPStan\Type\StringType::__set_state(array(
            )),
            1 => 
            PHPStan\Type\StringType::__set_state(array(
            )),
            2 => 
            PHPStan\Type\IntegerRangeType::__set_state(array(
               'min' => -32768,
               'max' => 32767,
            )),
            3 => 
            PHPStan\Type\IntegerRangeType::__set_state(array(
               'min' => -32768,
               'max' => 32767,
            )),
          ),
           'optionalKeys' => 
          array (
          ),
        )),
      ),
    ),
    'SELECT email, adaid FROM ada LIMIT 1' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada LIMIT 1, 10' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE' => 
    array (
      'error' => 
      staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT email, adaid FROM ada WHERE adaid = 1' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE adaid = 2' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE adaid = 3' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE adaid IN(1,3)' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE adaid=' => 
    array (
      'error' => 
      staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
    'SELECT email, adaid FROM ada WHERE adaid=1' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE email = \'test@example.org\'' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE email = \'webmaster@example.org\'' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE email=\'foo\'' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada WHERE gesperrt = \'1\'' => 
    array (
      'error' => NULL,
    ),
    'SELECT email, adaid FROM ada article_slice WHERE' => 
    array (
      'error' => 
      staabm\PHPStanDba\Error::__set_state(array(
         'message' => 'You have an error in your SQL syntax; check the manual that corresponds to your MySQL/MariaDB server version for the right syntax to use near \'LIMIT 0\' at line 1',
         'code' => 1064,
      )),
    ),
  ),
  'runtimeConfig' => 
  array (
    'errorMode' => 'exception',
    'debugMode' => false,
    'stringifyTypes' => false,
  ),
);